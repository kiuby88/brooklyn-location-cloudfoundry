name: CF - appserver-w-db
services:
- type: brooklyn.entity.cloudfoundry.webapp.java.JavaCloudFoundryPaasWebApp
  name: Web AppServer HelloWorld
  id: webapp
  location: cloudfoundry-instance
  brooklyn.config:
    application-name: test-brooklyn-monitor-app-JM
    application-url: classpath://brooklyn-webapp-custom-env-monitoring.war
    bind: 
    - $brooklyn:component("db")
    env: 
      myDbJdbcUrl: $brooklyn:component("db").attributeWhenReady("test-brooklyn-monitor-app-JM.credentials.jdbcUrl")
      myDbName: $brooklyn:component("db").attributeWhenReady("test-brooklyn-monitor-app-JM.credentials.name")
      myDbHostName: $brooklyn:component("db").attributeWhenReady("test-brooklyn-monitor-app-JM.credentials.hostname")
      myDbUser: $brooklyn:component("db").attributeWhenReady("test-brooklyn-monitor-app-JM.credentials.username")
      myDbPassword: $brooklyn:component("db").attributeWhenReady("test-brooklyn-monitor-app-JM.credentials.password")
      myDbPort: $brooklyn:component("db").attributeWhenReady("test-brooklyn-monitor-app-JM.credentials.port")
  brooklyn.initializers:
    - type: brooklyn.entity.software.http.HttpRequestSensor
      brooklyn.config:
        name: app.memory
        uri: http://test-brooklyn-monitor-app-jm-domain.cfapps.io/monitoring?format=json
        jsonPath: $.list[12].memoryInformation.usedMemory
        targetType: String
        period: 2000ms
  brooklyn.policies:
    - policyType: brooklyn.policy.autoscaling.AutoScalerPolicy
      brooklyn.config:
        metric: $brooklyn:sensor("brooklyn.entity.cloudfoundry.webapp.java.JavaCloudFoundryPaasWebApp", "app.jm.usedmemory")
        metricLowerBound: 50000000
        metricUpperBound: 100000000
        minPoolSize: 1
        maxPoolSize: 2

- type: brooklyn.entity.cloudfoundry.services.sql.cleardb.ClearDbService
  id: db
  name: DB HelloWorld Visitors
  location: cloudfoundry-instance
  brooklyn.config:
    creationScriptUrl: classpath://chat-database.sql
    serviceInstanceName: test-brooklyn-service-mysql-JM
    plan: spark